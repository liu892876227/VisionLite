<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TwinCAT.Ads.ConfigurationProviders</name>
    </assembly>
    <members>
        <member name="T:TwinCAT.Ads.Configuration.ConfigurationExtension">
            <summary>
            StaticRoutes Configuration Sources
            Implements the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />
            </summary>
            <seealso cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />
        </member>
        <member name="M:TwinCAT.Ads.Configuration.ConfigurationExtension.Dump(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String)">
            <summary>
            Dumps the configuration into the specified logger.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="logger">The logger.</param>
            <param name="level">The level.</param>
            <param name="parentKey">The parent key.</param>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationSource">
            <summary>
            StaticRoutes Configuration Sources
            Implements the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />
            </summary>
            <remarks>
            <example>
            <code language="C#" title="Enhanced Logging/Configuration approach with HostBuilder" source="..\..\Samples\Sample.Ads.AdsServerCore\Program.cs" region="CODE_SAMPLE" />
            </example>
            </remarks>
            <seealso cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider"/>
            <seealso cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationBuilderExtension"/>
            <seealso cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration">Configuration overview</seealso>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationSource.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationSource"/> class.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Builds the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> for this source.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider">
            <summary>
            Class StaticRoutesXmlConfigurationProvider.
            Implements the <see cref="T:Microsoft.Extensions.Configuration.ConfigurationProvider" />
            </summary>
            <remarks>To use this provider, add the <see cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationSource"/> to your application host configuration.
            See <see cref="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationBuilderExtension.AddStaticRoutesXmlConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Logging.ILoggerFactory)"/>
            <example>
            <code language="C#" title="Enhanced Logging/Configuration approach with HostBuilder" source="..\..\Samples\Sample.Ads.AdsServerCore\Program.cs" region="CODE_SAMPLE" />
            </example>
            </remarks>
            <seealso cref="T:Microsoft.Extensions.Configuration.ConfigurationProvider" />
            <seealso cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationSource"/>
            <seealso cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationBuilderExtension"/>
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration">Configuration overview</seealso>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider"/> class.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider"/> class.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider.MqttBrokers">
            <summary>
            Gets the MQTT brokers.
            </summary>
            <value>The MQTT brokers.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider.Load">
            <summary>
            Loads (or reloads) the StaticRoutes.xml from the [TwinCATTarget] folder and the Routes child folder.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider.addConfigurations(TwinCAT.Ads.Configuration.RouterConfig,System.Collections.Generic.List{TwinCAT.Ads.Configuration.RouteConfig},System.Collections.Generic.List{TwinCAT.Ads.Configuration.MqttConfig},System.Collections.Generic.List{TwinCAT.Ads.Configuration.RemoteServerConfig},System.Collections.Generic.List{TwinCAT.Ads.Configuration.RemoteJsonConfig},System.Collections.Generic.List{TwinCAT.Ads.Configuration.RemoteEtherCATConfig})">
            <summary>
            Adds the configurations in the <see cref="T:TwinCAT.Ads.Configuration.RouterConfig"/> to the seperate lists
            </summary>
            <param name="config">The configuration.</param>
            <param name="routes">The remote routes in the configuration</param>
            <param name="mqtt">The Mqtt settings in the router config</param>
            <param name="servers">The server settings in the config </param>
            <param name="jsons">The jsons settings in the config</param>
            <param name="etherCATs">The EtherCAT settings in the config</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns the list of keys that this provider has.
            </summary>
            <param name="earlierKeys">The earlier keys that other providers contain.</param>
            <param name="parentPath">The path for the parent IConfiguration.</param>
            <returns>The list of keys for this provider.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider.TryGet(System.String,System.String@)">
            <summary>
            Attempts to find a value with the given key, returns true if one is found, false otherwise.
            </summary>
            <param name="key">The key to lookup.</param>
            <param name="value">The value found at key if one is found.</param>
            <returns>True if key has a value, false otherwise.</returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationBuilderExtension">
            <summary>
            Extension class adding StaticRoutes.xml file reading to the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>.
            </summary>
            <remarks>
            <example>
            <code language="C#" title="Enhanced Logging/Configuration approach with HostBuilder" source="..\..\Samples\Sample.Ads.AdsServerCore\Program.cs" region="CODE_SAMPLE" />
            </example>
            </remarks>
            <seealso cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationProvider"/>
            <seealso cref="T:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationSource"/>
            <seealso cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration">Configuration overview</seealso>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesXmlConfigurationBuilderExtension.AddStaticRoutesXmlConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Adds the contents of the StaticRoutes.xml file(s) and routes subfolder into the configuration.
            </summary>
            <param name="builder">The configuration builder.</param>
            <param name="logger">The logger factory.</param>
            <returns>IConfigurationBuilder.</returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.AmsRouterConfiguration">
            <summary>
            AmsRouterConfiguration configuration class.
            </summary>
            <remarks>
            This configuration object is used in conjunction with the <see cref="!:Microsoft.Extensions.Configuration.ConfigurationBinder.Get"/> method to transform the generic <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            into a concrete configuration class.
            <code language="cs">
            AmsRouterConfiguration? config = ConfigurationBinder.Get&lt;AmsRouterConfiguration&gt;(_configuration);
            </code>
            The content of the configuration is read by a so called configuration builder (<see href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration"/>)
            When the configuration (coming from Environment Variables, appsettings configuration files etc.) aligns to the <see cref="T:TwinCAT.Ads.Configuration.RouterConfig"/> class, an instance with filled properties
            is created.
            To see an example for the configuration please have look at <see cref="T:TwinCAT.Ads.Configuration.RouterConfig"/>
            </remarks>
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration"/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.AmsRouterConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.AmsRouterConfiguration"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.AmsRouterConfiguration.AmsRouter">
            <summary>
            Gets or sets the <see cref="T:TwinCAT.Ads.Configuration.RouterConfig"/> object.
            </summary>
            <value>The ams router.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.AmsRouterConfiguration.CreateDefault">
            <summary>
            Creates a default <see cref="T:TwinCAT.Ads.Configuration.AmsRouterConfiguration"/> object with address set to '1.1.1.1.1.1'.
            </summary>
            <returns>TwinCAT.Ads.Configuration.AmsRouterConfiguration.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.AmsRouterConfiguration.Align">
            <summary>
            Aligns the <see cref="T:TwinCAT.Ads.Configuration.AmsRouterConfiguration"/> with the <see cref="T:TwinCAT.Ams.AmsConfiguration"/> global object.
            </summary>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.RouterConfig">
            <summary>
            Router Configuration class (AmsRouter configuration)
            </summary>
            <remarks>
            The content of the configuration is read by a so called configuration builder (<see href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration"/>).
            A set of environment variables for using 'AdsOverMqtt' looks like this:
            <code language="bat">
            # Basic ADS-Router config which has to match StaticRoutes on TwinCAT-Host systems
            # Set the Router Name
            AmsRouter__Name=MqttRouter
            # Set the Local AmsNetId for this sample
            AmsRouter__NetId = 42.42.42.42.1.1 
            
            #Use All Channel protocols: 1st try standard AMS, 2nd fallback to Mqtt
            AmsRouter__ChannelProtocol=All
            
            AmsRouter__Mqtt__0__NORETAIN = false
            AmsRouter__Mqtt__0__UNIDIRECTIONAL=false
            AmsRouter__Mqtt__0__PORT=8883
            AmsRouter__Mqtt__0__ADDRESS=ba-0f8cfe2680560cffb.eu-central-1.demo.beckhoff-cloud-instances.com
            AmsRouter__Mqtt__0__TOPIC = VirtualAmsNetwork1
            AmsRouter__Mqtt__0__TLS__IGNORECN=false
            AmsRouter__Mqtt__0__TLS__CA__0=C:\Program Files(x86)\Beckhoff\TwinCAT\3.1\Target\Certificates\BA-0f8cfe2680560cffb\intermediateCA.pem
            AmsRouter__Mqtt__0__TLS__CERT = C:\Program Files(x86)\Beckhoff\TwinCAT\3.1\Target\Certificates\BA-0f8cfe2680560cffb\MyDevice.pem
            AmsRouter__Mqtt__0__TLS__KEY = C:\Program Files(x86)\Beckhoff\TwinCAT\3.1\Target\Certificates\BA-0f8cfe2680560cffb\MyDevice.key
            AmsRouter__Mqtt__0__TLS__VERSION = tlsv1.2
            </code>
            Internally, in the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> section dictionary, thise key value associations look like this:
            <code language="bat">
            AmsRouter:Name=MqttRouter
            AmsRouter:NetId = 42.42.42.42.1.1 
            AmsRouter:ChannelProtocol=All
            AmsRouter:Mqtt:0:NORETAIN = false
            AmsRouter:Mqtt:0:UNIDIRECTIONAL=false
            AmsRouter:Mqtt:0:PORT=8883
            AmsRouter:Mqtt:0:ADDRESS=ba-0f8cfe2680560cffb.eu-central-1.demo.beckhoff-cloud-instances.com
            AmsRouter:Mqtt:0:TOPIC = VirtualAmsNetwork1
            AmsRouter:Mqtt:0:TLS:IGNORECN=false
            AmsRouter:Mqtt:0:TLS:CA:0=C:\Program Files(x86)\Beckhoff\TwinCAT\3.1\Target\Certificates\BA-0f8cfe2680560cffb\intermediateCA.pem
            AmsRouter:Mqtt:0:TLS:CERT = C:\Program Files(x86)\Beckhoff\TwinCAT\3.1\Target\Certificates\BA-0f8cfe2680560cffb\MyDevice.pem
            AmsRouter:Mqtt:0:TLS:KEY = C:\Program Files(x86)\Beckhoff\TwinCAT\3.1\Target\Certificates\BA-0f8cfe2680560cffb\MyDevice.key
            AmsRouter:Mqtt:0:TLS:VERSION = tlsv1.2
            </code>
            </remarks>
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration"/>
            <see cref="T:TwinCAT.Ads.Configuration.AmsRouterConfiguration"/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouterConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RouterConfig"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouterConfig.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RouterConfig"/> class.
            </summary>
            <param name="doc">The document.</param>
            <exclude/>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouterConfig._routes">
            <summary>
            The routes
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouterConfig._mqtt">
            <summary>
            MQTT configurations
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouterConfig._localName">
            <summary>
            Name of the Local Router
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouterConfig._localNetId">
            <summary>
            The local NetId
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.RemoteConnections">
            <summary>
            Gets or sets the remote Routes/Connections.
            </summary>
            <remarks>These are the remote routes that are reachable from this System (via Ads/Ams).
            BackRoutes on the remote side must be registered also to be able to communicate in both directions.
            The Key name of this IConfiguration value:
            AmsRouter:RemoteConnections
            </remarks>
            <value>The remote connection configurations or NULL.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.Mqtt">
            <summary>
            Gets or sets the MQTT configurations.
            </summary>
            <remarks>Key name of this IConfiguration value:
            AmsRouter:MQTT
            </remarks>
            <value>The MQTT configurations or NULL.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.ChannelProtocol">
            <summary>
            Gets or sets the used ADS Channel protocol (to force specific protocols, Default: All)
            </summary>
            <remarks>Key name of this IConfiguration value:
            AmsRouter:ChannelProtocol
            
            The channel protocol
            </remarks>
            <value>The channel protocol.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.ChannelPortType">
            <summary>
            Gets or sets the Ads/Ams infrastructure to use (Default: All)
            </summary>
            <remarks>Key name of this IConfiguration value:
            AmsRouter:ChannelPortType
            
            The ChannelPortType
            </remarks>
            <value>The ChannelPortType method.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.NetId">
            <summary>
            Gets or sets the NetID of the local System.
            </summary>
            <remarks>Key name of this IConfiguration value:
            AmsRouter:NetId
            </remarks>
            <value>The net identifier.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.Name">
            <summary>
            Gets or sets the name of the local System (Router)
            </summary>
            <remarks>Key name of this IConfiguration value:
            AmsRouter:Name
            </remarks>
            <value>The name.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackIP">
            <summary>
            Gets or sets the IPAddress used for local communication (Loopback ip).
            </summary>
            <remarks>This is the IPAddress, that is used by the TcpRouter for its Loopback Connections (in combination with the
            <see cref="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackPort"/>. By default this is set to IPAddress.Loopback (127.0.0.1) and is only accessible from the
            local machine.
            If AdsClient/AdsServers should run seperated from the Router System, this <see cref="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackIP"/> must be set to valid
            local IPAddress.
            Furthermore valid external addresses (where the AdsClients/AdsServer lives) must be specified via 
            <see cref="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackExternalIPs"/> or <see cref="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackExternalSubnet"/>. Only those connections will be accepted
            The Key name of this IConfiguration value:
            AmsRouter:LoopbackIP
            </remarks>
            <value>The loopback ip.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackPort">
            <summary>
            Gets or sets the TCP Port that is used for the loopback.
            </summary>
            <remarks>The LoopbackPort defines the Loopback TcpEndpoints in combination with the <see cref="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackIP"/>.
            The Key name of this IConfiguration value:
            AmsRouter:LoopbackPort
            </remarks>
            <value>The loopback port.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackExternalIPs">
            <summary>   
            Gets or sets the loopback externals.
            </summary>
            <remarks>The Loopback externals are IPAddresses, that are allowed to use the Loopback connection. Use this IP list or specify alternatively the <see cref="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackExternalSubnet"/>
            The key name of this IConfiguration value:
            AmsRouter:LoopbackExternalIPs
            </remarks>
            <value>The loopback externals.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.LoopbackExternalSubnet">
            <summary>
            Gets or sets the allowed Subnet for the Loopback communication.
            </summary>
            <remarks>
            This is an alternative approach to set the allowed 'LoopbackIPs' for loopback communication.
            In docker/virtual enviroments often a whole subnet will be spanned
            The key name of this IConfiguration value:
            AmsRouter:LoopbackExternalSubnet
            </remarks>
            <value>The loopback externals subnet.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.TcpPort">
            <summary>
            Gets or sets the TCP port used for external communication (Default: 0xBF02)
            </summary>
            <remarks>This port is changed in scenarious, where the External Ads/Ams communication should be configured to another port
            (e.g. some Docker environments).
            The key name for this IConfiguration value:
            AmsRouter:TcpPort
            </remarks>
            <value>The TCP port.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.UdpDiscoveryPort">
            <summary>
            Gets or sets the UDP discovery port that is used by the Broadcast.
            </summary>
            <remarks>
            The default port is <see cref="F:TwinCAT.Ams.AmsConfiguration.DEFAULT_UDP_DISCOVERY_PORT"/> (0xBFO3).
            In scenarious, where the .NET TcpRouter/SystemService should run beneath an active TwinCAT installation, it
            is necessary to change the port to prevent a conflict.
            The key name for this IConfiguration value:
            AMsRouter:UdpDIscoveryPort
            </remarks>
            <value>The UDP discovery port.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.Server">
            <summary>
            Remote Server configuration (see TcConfig.xsd XML schema)
            </summary>
            <remarks>
            The key name for this IConfiguration value:
            AmsRouter:Server
            </remarks>
            <value>The server.</value>
            <exclude/>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.Json">
            <summary>
            Remote Json connection configuration (see TcConfig.xsd Xml Schema)
            </summary>
            <remarks>
            The key name for this IConfiguration value:
            AmsRouter:Json
            </remarks>
            <value>The json configuration</value>
            <exclude/>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouterConfig.EtherCAT">
            <summary>
            Remote EtherCAT connection configuration (see TcConfig.xsd Xml Schema)
            </summary>
            <remarks>
            The key name for this IConfiguration value:
            AmsRouter:EtherCAT
            </remarks>
            <value>The EtherCAT configuration.</value>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouterConfig.parseEtherCATSection(System.Xml.Linq.XDocument)">
            <summary>
            Parses the EtherCAT section.
            </summary>
            <param name="doc">The document.</param>
            <returns>System.Nullable&lt;List&lt;RemoteConnectionEtherCAT&gt;&gt;.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouterConfig.parseJsonSection(System.Xml.Linq.XDocument)">
            <summary>
            Parses the json section.
            </summary>
            <param name="doc">The document.</param>
            <returns>System.Nullable&lt;List&lt;RemoteConnectionJson&gt;&gt;.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouterConfig.parseServerSection(System.Xml.Linq.XDocument)">
            <summary>
            Parses the server section.
            </summary>
            <param name="doc">The document.</param>
            <returns>System.Nullable&lt;RemoteConnectionServer&gt;.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouterConfig.parseRoutesSection(System.Xml.Linq.XDocument)">
            <summary>
            Parses the routes section.
            </summary>
            <param name="doc">The document.</param>
            <returns>List&lt;RemoteConnectionRoute&gt;.</returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.RouteConfig">
            <summary>
            Configuration for a single route
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]
            
            Example for setting Routes via Network variables (2 remote connections)
            AmsRouter__RemoteConnections__0__Name=Route1
            AmsRouter__RemoteConnections__0__Address=192.168.0.5
            AmsRouter__RemoteConnections__0__NetId=192.168.0.5.1.1
            AmsRouter__RemoteConnections__1__Name=Route2
            AmsRouter__RemoteConnections__1__Address=192.168.0.6
            AmsRouter__RemoteConnections__1__NetId=192.168.0.6.1.1
            </remarks>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RouteConfig"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RouteConfig"/> class.
            </summary>
            <param name="routeNode">The route node.</param>
            <exclude/>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouteConfig._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Name">
            <summary>
            Gets or sets the name of the remote Route
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Name
            </remarks>
            <value>The name.</value>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouteConfig._address">
            <summary>
            The address
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Address">
            <summary>
            Gets or sets the address of the remote Route (HostName or IPAddress).
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Address
            </remarks>        
            <value>The address.</value>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouteConfig._netId">
            <summary>
            The AmsNetId
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.NetId">
            <summary>
            Gets or sets the NetID of the remote route
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:NetId
            </remarks>
            <value>The net identifier.</value>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouteConfig._type">
            <summary>
            The type
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Type">
            <summary>
            Gets or sets the type of the route.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Type
            </remarks>
            <value>The type.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Unidirectional">
            <summary>
            Gets a value indicating whether this <see cref="T:TwinCAT.Ads.Configuration.RouteConfig"/> is unidirectional.
            </summary>
            <remarks>No ADS requests from peer.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Unidirectional
            </remarks>
            <value><c>true</c> if unidirectional; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.AutoConnect">
            <summary>
            Gets a value indicating whether [automatic connect].
            </summary>
            <remarks>Automatically connect to remote route.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:AutoConnect
            </remarks>
            <value><c>true</c> if [automatic connect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.AutoConnectDelay">
            <summary>
            Gets the automatic connect delay.
            </summary>
            <remarks>
            Time in milliseconds to wait after connection is lost, before trying to reconnect.
            If value = 0 a connection is only established when TwinCAT is started.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:AutoConnectDelay
            </remarks>
            <value>The automatic connect delay.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.RemoteNetId">
            <summary>
            Gets the remote NetId
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:RemoteNetId
            </remarks>
            <value>The remote net identifier.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.RemoteMask">
            <summary>
            Gets the mask of the <see cref="P:TwinCAT.Ads.Configuration.RouteConfig.RemoteNetId"/>
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:RemoteMask
            </remarks>
            <value>The remote mask.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Timeout">
            <summary>
            Gets Route Timeout setting.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Timeout
            </remarks>
            <value>The timeout.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.MaxFragment">
            <summary>
            Gets the routes MaxFragment setting
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:MaxFragment
            </remarks>
            <value>The maximum fragment.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.AmsCompression">
            <summary>
            Gets the routes AmsCompression setting.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:AmsCompression
            </remarks>
            <value>The ams compression.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Flags">
            <summary>
            Gets the routes Flags setting.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Flags
            </remarks>
            <value>The flags.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.SubRoutes">
            <summary>
            Gets the SubRoutes.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:SubRoutes
            </remarks>
            <value>The sub routes.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Tls">
            <summary>
            Gets the TLS security setting or NULLL
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Tls
            </remarks>
            <value>The TLS.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Psk">
            <summary>
            Gets the PSK security setting or NULL
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Psk
            </remarks>
            <value>The PSK.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.IsLocal">
            <summary>
            Gets a value indicating whether this Route is representing the Local System.
            </summary>
            <value><c>true</c> if this instance is local; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.IsLoopback">
            <summary>
            Indicates, that this <see cref="T:TwinCAT.Ads.AmsNetId" /> indicates a Loopback (ID: 127.0.0.1.1.1)
            </summary>
            <value><c>true</c> if this instance is loop back; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteConfig.Security">
            <summary>
            Gets the type of security for this <see cref="T:TwinCAT.Ads.Configuration.RouteConfig"/>
            </summary>
            <value>The type of security.</value>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.IPConfig">
            <summary>
            IP configuration classs
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.IPConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.IPConfig"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.IPConfig.IP">
            <summary>
            Gets or sets the ip.
            </summary>
            <value>The ip.</value>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.SubRouteConfig">
            <summary>
            Sub Route configuration
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.SubRouteConfig.#ctor(System.String,TwinCAT.Ads.AmsNetId)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.SubRouteConfig"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="netId">The net identifier.</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.SubRouteConfig.Name">
            <summary>
            Gets the SubRoutes name
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.SubRouteConfig.NetId">
            <summary>
            Gets SubRoutes NetId
            </summary>
            <value>The net identifier.</value>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.RemoteServerConfig">
            <summary>
            Remote server connection configuration (see TcConfig.xsd XML Schema)
            </summary>
            <exclude/>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RemoteServerConfig.Tls">
            <summary>
            Gets the TLS Security configuration (or NULL)
            </summary>
            <value>The TLS.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RemoteServerConfig.Psk">
            <summary>
            Gets the PSK Security configuration (or NULL)
            </summary>
            <value>The PSK.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RemoteServerConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RemoteServerConfig"/> class.
            </summary>
            <param name="serverNode">The server node.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RemoteServerConfig.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parses the XML Element
            </summary>
            <param name="serverNode">The server node.</param>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.SecurityType">
            <summary>
            Enum SecurityType
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.SecurityType.None">
            <summary>
            No security / Uninitialized
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.SecurityType.User">
            <summary>
            User Authentication
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.SecurityType.TLS">
            <summary>
            TLS
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.SecurityType.PSK">
            <summary>
            PSK
            </summary>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.SecurityConfigBase">
            <summary>
            Security configuration base class.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.SecurityConfigBase.#ctor(TwinCAT.Ads.Configuration.SecurityType)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.SecurityConfigBase"/> class.
            </summary>
            <param name="tp">The tp.</param>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.SecurityConfigBase.securityType">
            <summary>
            The security type
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.SecurityConfigBase.Security">
            <summary>
            Gets the type of security.
            </summary>
            <value>The type of security.</value>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.UserSecurityConfig">
            <summary>
            Security configuration for User Autentication.
            Implements the <see cref="T:TwinCAT.Ads.Configuration.SecurityConfigBase" />
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.UserSecurityConfig.#ctor(System.String,System.Security.SecureString,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.UserSecurityConfig"/> class.
            </summary>
            <param name="user">The user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.UserSecurityConfig.CaseSensitive">
            <summary>
            Gets a value indicating whether the user name is case sensitive
            </summary>
            <value><c>true</c> if [case sensitive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.UserSecurityConfig.User">
            <summary>
            Gets the User.
            </summary>
            <value>The user.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.UserSecurityConfig.Password">
            <summary>
            Gets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.UserSecurityConfig.Dump">
            <summary>
            Dumps this instance.
            </summary>
            <returns>System.String[].</returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.RemoteJsonConfig">
            <summary>
            Remote Json configuration (see TcConfig.xsd XML Schema)
            Implements the <see cref="T:TwinCAT.Ads.Configuration.MqttConfig" />
            </summary>
            <seealso cref="T:TwinCAT.Ads.Configuration.MqttConfig" />
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RemoteJsonConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RemoteJsonConfig"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.RemoteEtherCATConfig">
            <summary>
            Class RemoteConnectionEtherCAT.
            Implements the <see cref="T:TwinCAT.Ads.Configuration.MqttConfig" />
            </summary>
            <seealso cref="T:TwinCAT.Ads.Configuration.MqttConfig" />
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RemoteEtherCATConfig.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RemoteEtherCATConfig.SdoNetId">
            <summary>
            Gets the SDO NetId
            </summary>
            <value>The sdo net identifier.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RemoteEtherCATConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RemoteEtherCATConfig"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RemoteEtherCATConfig.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parses the element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:TwinCAT.Ads.Configuration.MqttConfig" -->
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.CleanSession">
            <summary>
            Gets a value indicating whether [clean session].
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:CleanSession
            </remarks>
            <value><c>true</c> if [clean session]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.KeepAlive">
            <summary>
            Gets the keep alive.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:KeepAlive
            </remarks>
            <value>The keep alive.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.ClientId">
            <summary>
            Gets the client identifier (ComputerName if not set)
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:ClientId
            </remarks>
            <value>The client identifier.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.DisplayName">
            <summary>
            Gets the display name (ComputerName if not set)
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:DisplayName
            </remarks>
            <value>The display name.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.MqttConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.MqttConfig"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.MqttConfig.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},TwinCAT.Ads.Configuration.SecurityConfigBase)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.MqttConfig" /> class.
            </summary>
            <param name="address">The address.</param>
            <param name="tcpIpPort">The TCP/IP port.</param>
            <param name="topic">The topic.</param>
            <param name="qos">The Qos value or null</param>
            <param name="sec">The MqttSecurity info object</param>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.MqttConfig.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.MqttConfig" /> class.
            </summary>
            <param name="address">The address.</param>
            <param name="port">The TCP/IP Port</param>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.MqttConfig.#ctor(System.Xml.Linq.XElement)">
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.MqttConfig.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parses the element.
            </summary>
            <param name="mqttElement">The element.</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.NoRetain">
            <summary>
            Gets a value indicating whether [no retain].
            </summary>
            <remarks>No retain messages will be used.
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:NoRetain
            </remarks>
            <value><c>true</c> if [no retain]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Unidirectional">
            <summary>
            Gets a value indicating whether this <see cref="T:TwinCAT.Ads.Configuration.MqttConfig"/> is unidirectional.
            </summary>
            <remarks>No ADS Requests from peer
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Unidirectional
            </remarks>
            <value><c>true</c> if unidirectional; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.WildcardWorkaround">
            <summary>
            Gets a value indicating whether [wildcard workaround].
            </summary>
            <remarks>Workaround to support broker that not using wildcard as defined in MQTT 3.1.1
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:WildcardWorkaround
            </remarks>
            <value><c>true</c> if [wildcard workaround]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Address">
            <summary>
            Gets or sets the MQTT Broker address
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Address
            </remarks>
            <value>The address.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Port">
            <summary>
            Gets or sets the used MQTT port.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Port
            </remarks>
            <value>The port.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Topic">
            <summary>
            Gets or sets the MQTT topic.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Topic
            </remarks>
            <value>The topic.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Qos">
            <summary>
            Gets the Quality of Service value or null.
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Qos
            </remarks>
            <value>The qos.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.User">
            <summary>
            Gets or sets the MQTT User Name
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:User
            </remarks>
            <value>The user.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Password">
            <summary>
            Gets or sets the MQTT Password
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Password
            </remarks>
            <value>The password.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Tls">
            <summary>
            Gets or sets the TLS Security configuration
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Tls
            </remarks>
            <value>The TLS.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Psk">
            <summary>
            Gets or sets the PSK Security configuration
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:Mqtt:[Index]:Psk
            </remarks>
            <value>The PSK.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.MqttConfig.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.MqttConfig.Security">
            <summary>
            Gets the type of security.
            </summary>
            <value>The type of the security.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.MqttConfig.Dump">
            <summary>
            Dumps this instance.
            </summary>
            <returns>System.String[].</returns>
            <exclude/>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.TlsConfig">
            <summary>
            Tls configuration
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.TlsConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.TlsConfig"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.TlsConfig.#ctor(System.String[],System.String,System.String,System.Security.SecureString,System.String,System.String[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.TlsConfig"/> class.
            </summary>
            <param name="ca">The ca.</param>
            <param name="cert">The cert.</param>
            <param name="key">The key.</param>
            <param name="keyPassword">The key password.</param>
            <param name="version">The version.</param>
            <param name="cipher">The cipher.</param>
            <param name="crl">The CRL.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.TlsConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.TlsConfig"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.CA">
            <summary>
            Gets or sets the trusted CA Certificate
            </summary>
            <remarks>
            Trusted CA certificate; PEM or DER encoded or file name with PEM or DER encoded certificate.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index1]:Tls:CA[Index2]
            AmsRouter:Mqtt:[Index1]:Tls:CA[Index2]
            AmsRouter:Server:Tls:CA[Index]
            AmsRouter:EtherCAT:[Index1]:Tls:CA[Index2]
            AmsRouter:Json:[Index1]:Tls:CA[Index2]
            </remarks>
            <value>The Trusted CA certificate</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.Cert">
            <summary>
            Gets or sets the Client certificate
            </summary>
            <remarks>
            Client certificate; PEM or DER encoded or file name with PEM or DER encoded certificate.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:Cert
            AmsRouter:Mqtt:[Index]:Tls:Cert
            AmsRouter:Server:Tls:Cert
            AmsRouter:EtherCAT:[Index]:Tls:Cert
            AmsRouter:Json:[Index]:Tls:Cert
            </remarks>
            <value>The certificatae.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.Key">
            <summary>
            Gets/Sets the client certificate.
            </summary>
            <remarks>
            The key for client certificate; PEM or DER encoded or file name with PEM or DER encoded certificate
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:Key
            AmsRouter:Mqtt:[Index]:Tls:Key
            AmsRouter:Server:Tls:Key
            AmsRouter:EtherCAT:[Index]:Tls:Key
            AmsRouter:Json:[Index]:Tls:Key
            </remarks>
            <value>The client certificate.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.Version">
            <summary>
            Gets or sets the SSL protocol version.
            </summary>
            <remarks>
            Key for client certificate; PEM or DER encoded or file name with PEM or DER encoded certificate.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:Version
            AmsRouter:Mqtt:[Index]:Tls:Version
            AmsRouter:Server:Tls:Version
            AmsRouter:EtherCAT:[Index]:Tls:Version
            AmsRouter:Json:[Index]:Tls:Version
            </remarks>
            <value>The SSL protocol version.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.KeyPwd">
            <summary>
            Gets or sets the key password.
            </summary>
            <remarks>
            Password for key - actual not supported.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnnections:[Index]:Tls:KeyPwd
            AmsRouter:Mqtt:[Index]:Tls:KeyPwd
            AmsRouter:Server:Tls:KeyPwd
            AmsRouter:EtherCAT:[Index]:Tls:KeyPwd
            AmsRouter:Json:[Index]:Tls:KeyPwd
            </remarks>
            <value>The key password.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.Crl">
            <summary>
            Gets or sets the revokation list.
            </summary>
            <remarks>
            Certificate revocation list; PEM or DER encoded or file name with PEM or DER encoded crl.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:Crl
            AmsRouter:Mqtt:[Index]:Tls:Crl
            AmsRouter:Server:Tls:Crl
            AmsRouter:EtherCAT:[Index]:Tls:Crl
            AmsRouter:Json:[Index]:Tls:Crl
            </remarks>
            <value>The revokation list.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.Cipher">
            <summary>
            Gets the cipher.
            </summary>
            <remarks>
            Cipher suites used in client hello - actual not supported.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:Cipher
            AmsRouter:Mqtt:[Index]:Tls:Cipher
            AmsRouter:Server:Tls:Cipher
            AmsRouter:EtherCAT:[Index]:Tls:Cipher
            AmsRouter:Json:[Index]:Tls:Cipher
            </remarks>
            <value>The cipher.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.Insecure">
            <summary>
            Gets a value indicating whether the Peer certificate is checked.
            </summary>
            <remarks>
            Peer certificate not checked.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:Insecure
            </remarks>
            <value><c>true</c> if insecure; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.IgnoreCn">
            <summary>
            Gets/Sets a value indicating whether the CN of trusted peers is checked.
            </summary>
            <remarks>
            Do not verify CN of trusted peers.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:IgnoreCn
            </remarks>
            <value><c>true</c> if [ignore cn]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.IgnoreCommonCa">
            <summary>
            Gets a value indicating whether [ignore common ca].
            </summary>
            <remarks>
            Do not verify CN of trusted peers.
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:IgnoreCommonCa
            </remarks>
            <value><c>true</c> if [ignore common ca]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.TlsConfig.SelfSigned">
            <summary>
            Gets a value indicating whether the certificates are self signed
            </summary>
            <remarks>
            The certificates are self signed
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Tls:SelfSigned
            </remarks>
            <value><c>true</c> if [self signed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.TlsConfig.Dump">
            <summary>
            Dumps the <see cref="T:TwinCAT.Ads.Configuration.TlsConfig"/>
            </summary>
            <returns>System.String[].</returns>
            <exclude/>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.PskConfig">
            <summary>
            Psk configuration
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.PskConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.PskConfig"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.PskConfig.#ctor(System.String,System.String,System.Security.SecureString,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.PskConfig"/> class with identity an password.
            </summary>
            <param name="identity">The identity.</param>
            <param name="internalName">Name of the internal.</param>
            <param name="password">The password.</param>
            <param name="identityCaseSensitive">if set to <c>true</c> [identity case sensitive].</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.PskConfig.#ctor(System.String,System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.PskConfig" /> class with Identity and key.
             </summary>
             <param name="identity">The identity.</param>
             <param name="internalName">Name of the internal.</param>
             <param name="key">The preshared key.</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.PskConfig.InternalName">
            <summary>
            Gets or sets the Internal Name (only for <see cref="T:TwinCAT.Ads.Configuration.RemoteServerConfig"/>
            </summary>
            <remarks>
            only for <see cref="T:TwinCAT.Ads.Configuration.RemoteServerConfig"/>
            internal name of route - "Identity" if not set
            The key name for this IConfiguration value is:
            AmsRouter:Server:Psk:InternalName
            </remarks>
            <value>The name of the internal.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.PskConfig.Identity">
            <summary>
            Gets or sets the identity.
            </summary>
            <remarks>
            if not set: computer name
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Psk:Identity
            AmsRouter:Mqtt:[Index]:Psk:Identity
            AmsRouter:Server:Psk:Identity
            AmsRouter:EtherCAT:[Index]:Psk:Identity
            AmsRouter:Json:Psk:[Index]:Identity
            </remarks>
            <value>The identity.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.PskConfig.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <remarks>
            if not set: computer name
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Psk:Key
            AmsRouter:Mqtt:[Index]:Psk:Key
            AmsRouter:Server:Psk:Key
            AmsRouter:EtherCAT:[Index]:Psk:Key
            AmsRouter:Json:[Index]:Psk:Key
            </remarks>
            <value>The key.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.PskConfig.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <remarks>
            Key will be generated Sha256(Identity+Pwd), Identity in upper case if 'IdentityCaseSensitive' = false - UTF8
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Psk:Password
            AmsRouter:Mqtt:[Index]:Psk:Password
            AmsRouter:Server:Psk:Password
            AmsRouter:EtherCAT:[Index]:Psk:Password
            AmsRouter:Json:[Index]:Psk:Password
            </remarks>
            <value>The password.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.PskConfig.IdentityCaseSensitive">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:TwinCAT.Ads.Configuration.PskConfig.Password"/> string is case sensitive (Default: false)
            </summary>
            <remarks>
            The key name for this IConfiguration value is:
            AmsRouter:RemoteConnections:[Index]:Psk:IdentityCaseSensitive
            AmsRouter:Mqtt:[Index]:Psk:IdentityCaseSensitive
            AmsRouter:Server:Psk:IdentityCaseSensitive
            AmsRouter:EtherCAT:[Index]:Psk:IdentityCaseSensitive
            AmsRouter:Json:[Index]:Psk:IdentityCaseSensitive
            </remarks>
            <value><c>true</c> if [identity case sensitive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.PskConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.PskConfig"/> class.
            </summary>
            <param name="pskElement">The Psk element.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.PskConfig.Dump">
            <summary>
            Dumps the <see cref="T:TwinCAT.Ads.Configuration.PskConfig"/>
            </summary>
            <exclude/>
            <returns>System.String[].</returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.Route">
            <summary>
            Class Route specifies a an AMS/ADS Route object.
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.Route._name">
            <summary>The name of the <see cref="T:TwinCAT.Ads.Configuration.Route"/>.</summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.Route._address">
            <summary>The address</summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.Route._netId">
            <summary>
            The AmsNetId
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.Route._resolvedIPs">
            <summary>
            Resolved IP Addresses or NULL of not resolved.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.#ctor(System.Xml.XmlReader)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.Route"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.Route"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.#ctor(System.String,TwinCAT.Ads.AmsNetId,System.Collections.Generic.IList{System.Net.IPAddress})">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.Route"/> class.
            </summary>
            <param name="name">The name of the route.</param>
            <param name="netId">The net identifier.</param>
            <param name="ips">The ips.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.#ctor(System.String,TwinCAT.Ads.AmsNetId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.Route"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="netId">The AmsNetId of the route.</param>
            <param name="address">The address (HostName or IP)</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.Name">
            <summary>
            Gets the name of the <see cref="T:TwinCAT.Ads.Configuration.Route"/>.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.NetId">
            <summary>
            Gets the <see cref="T:TwinCAT.Ads.AmsNetId"/> of the route.
            </summary>
            <value>The AmsNetId.</value>
            <remarks>The <see cref="T:TwinCAT.Ads.AmsNetId"/> is the unique identifier used for the route.
            </remarks>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.Address">
            <summary>
            Gets the address of the <see cref="T:TwinCAT.Ads.Configuration.Route"/>.
            </summary>
            <value>The address.</value>
            <remarks>The Address can be the IPAddress / or the host name of the target system.</remarks>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.IsResolved">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Net.IPAddress">IPAddresses</see> are resolved.
            </summary>
            <value><c>true</c> if the IP Addresses are resolved; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.Resolve(System.Net.IPHostEntry)">
            <summary>
            Resolves the IPAddresses of the <see cref="T:TwinCAT.Ads.Configuration.Route"/>
            </summary>
            <param name="entry">Theh HostEntry</param>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.IPAddresses">
            <summary>
            Gets the resolved IP Addresses belonging to this <see cref="T:TwinCAT.Ads.Configuration.Route"/>.
            </summary>
            <value>The ip addresses.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.HostName">
            <summary>
            Gets the Host name of the route.
            </summary>
            <value>The name of the host.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.IsIPAddressed">
            <summary>
            Gets a value indicating whether the Route address specifies an IPAddress
            </summary>
            <value><c>true</c> If the Address is an IPAddress; otherwise when its specified as HostAddress <c>false</c>.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.Route.IsHostNameAddressed">
            <summary>
            Gets a value indicating whether this instance is an HostName <see cref="T:TwinCAT.Ads.Configuration.Route"/>.
            </summary>
            <value><c>true</c> if this instance is an HostName Addressed route; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.op_Equality(TwinCAT.Ads.Configuration.Route,TwinCAT.Ads.Configuration.Route)">
            <summary>
            Implements the == operator.
            </summary>
            <param name="o1">The o1.</param>
            <param name="o2">The o2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.op_Inequality(TwinCAT.Ads.Configuration.Route,TwinCAT.Ads.Configuration.Route)">
            <summary>
            Implements the != operator.
            </summary>
            <param name="o1">The o1.</param>
            <param name="o2">The o2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.Route.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.RouteCollection">
            <summary>
            Collection of routes.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RouteCollection"/> class.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.#ctor(System.Collections.Generic.IEnumerable{TwinCAT.Ads.Configuration.Route})">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Configuration.RouteCollection"/> class (copy constructor)
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.AddRange(System.Collections.Generic.IEnumerable{TwinCAT.Ads.Configuration.Route})">
            <summary>
            Adds a range of routes.
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>RouteCollection.</returns>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouteCollection._list">
            <summary>
            Internal list
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Configuration.RouteCollection._netIdDict">
            <summary>
            NetId --> Route
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:TwinCAT.Ads.Configuration.Route"/> at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>Route.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.RouteCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Add(TwinCAT.Ads.Configuration.Route)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.ArgumentException">Cannot add item</exception>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.TryAdd(TwinCAT.Ads.Configuration.Route)">
            <summary>
            Tries to add the route to the <see cref="T:TwinCAT.Ads.Configuration.RouteCollection"/>.
            </summary>
            <param name="route">The route.</param>
            <returns><c>true</c> if the route is added, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.CanAdd(TwinCAT.Ads.Configuration.Route)">
            <summary>
            Determines whether this instance can add the specified route.
            </summary>
            <param name="route">The route.</param>
            <returns><c>true</c> if this instance can add the specified route; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Contains(TwinCAT.Ads.Configuration.Route)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.CopyTo(TwinCAT.Ads.Configuration.Route[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.IndexOf(TwinCAT.Ads.Configuration.Route)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Insert(System.Int32,TwinCAT.Ads.Configuration.Route)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <exception cref="T:System.ArgumentException">Cannot add item</exception>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Remove(TwinCAT.Ads.Configuration.Route)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns><see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Remove(TwinCAT.Ads.AmsNetId)">
            <summary>
            Removes the specified <see cref="T:TwinCAT.Ads.AmsNetId"/> from the <see cref="T:TwinCAT.Ads.Configuration.RouteCollection"/>.
            </summary>
            <param name="netId">The Ams Net ID..</param>
            <returns><c>true</c> if removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.Remove(System.String)">
            <summary>
            Removes the specified route from the <see cref="T:TwinCAT.Ads.Configuration.RouteCollection"/>.
            </summary>
            <param name="routeName">Name of the route.</param>
            <returns><c>true</c> if removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.RouteCollection.AsReadOnly">
            <summary>
            Ases the read only.
            </summary>
            <returns>ReadOnlyCollection&lt;Route&gt;.</returns>
        </member>
        <member name="T:TwinCAT.Ads.Configuration.StaticRoutesLoader">
            <summary>
            Class StaticRoutesLoader.
            </summary>
        </member>
        <member name="P:TwinCAT.Ads.Configuration.StaticRoutesLoader.RemoteConnections">
            <summary>
            Gets the Remote connections configuration.
            </summary>
            <value>The routes configuration.</value>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesLoader.LoadRoutesConfig(Microsoft.Extensions.Logging.ILoggerFactory,TwinCAT.Ads.Configuration.RouterConfig@,TwinCAT.Ads.Configuration.RouterConfig[]@,TwinCAT.Ads.Configuration.RouterConfig[]@)">
            <summary>
            Loads the routes configuration form the ApplicationPath StaticRoutes.xml;
            </summary>
            <returns>RouterSettings.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesLoader.LoadRoutesConfig(System.String,Microsoft.Extensions.Logging.ILogger,TwinCAT.Ads.Configuration.RouterConfig@,TwinCAT.Ads.Configuration.RouterConfig[]@,TwinCAT.Ads.Configuration.RouterConfig[]@)">
            <summary>
            Loads the routes configuration.
            </summary>
            <param name="path">The path.</param>
            <param name="logger">The logger.</param>
            <param name="staticRoutes">The static routes.</param>
            <param name="trustedRoutes">The trusted routes.</param>
            <param name="untrustedRoutes">The untrusted routes.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Configuration.StaticRoutesLoader.LoadRoutesConfig(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Loads the routes configuration.
            </summary>
            <param name="logger">The logger.</param>
            <param name="routesFile">The routes file.</param>
            <returns>RemoteConnectionConfig.</returns>
        </member>
        <member name="T:TwinCAT.Ads.Logging.NamespaceDoc">
            <summary>
            This namespace contains Provider and Configuration classes for Logging.
            </summary>
        </member>
        <member name="T:TwinCAT.Ads.Logging.AdsLogger">
            <summary>
            Logger class for ADS logging.
            Implements the <see cref="T:Microsoft.Extensions.Logging.ILogger" />
            </summary>
            <remarks>The <see cref="T:TwinCAT.Ads.Logging.AdsLogger"/> class extends the standard logging information with timestamp and ThreadId information to 
            track ADS communication.
            Logging functionality is included in all ADS (.NET) components and the <see cref="T:TwinCAT.Ads.Logging.AdsLogger"/> class can be activated at the
            application host:
            <example>
            <code language="C#" title="Simple Logging approach with the AdsLoggerProvider" source="..\..\Samples\Sample.Ads.AdsClientCore\Logging.cs" region="CODE_SAMPLE" />
            <code language="C#" title="Enhanced Logging/Configuration approach with HostBuilder" source="..\..\Samples\Sample.Ads.AdsServerCore\Program.cs" region="CODE_SAMPLE" />
            </example>
            The configuration can be done via
            <list type="bullet">
            <item><see cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/></item>
            <item>or standard IConfiguration at the application host (Environment variables, appsettings.json, appsettings.xml)</item>
            </list>
            </remarks>
            <seealso cref="T:TwinCAT.Ads.Logging.AdsLoggerProvider"/>
            <seealso cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/>
            <seealso cref="T:Microsoft.Extensions.Logging.ILogger" />
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/logging?tabs=command-line">Configuration overview</seealso>
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration">Logging overview</seealso>
        </member>
        <member name="F:TwinCAT.Ads.Logging.AdsLogger._name">
            <summary>
            The Logger Category/Name
            </summary>
        </member>
        <member name="F:TwinCAT.Ads.Logging.AdsLogger._getCurrentConfig">
            <summary>
            Gets the current configuration
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLogger.#ctor(System.String,System.Func{TwinCAT.Ads.Logging.AdsLoggerConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Logging.AdsLogger"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="getCurrentConfig">The get current configuration.</param>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLogger.BeginScope``1(``0)">
            <summary>
            Begins a logical operation scope.
            </summary>
            <typeparam name="TState">The type of the state to begin scope for.</typeparam>
            <param name="state">The identifier for the scope.</param>
            <returns>An <see cref="T:System.IDisposable" /> that ends the logical operation scope on dispose.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Checks if the given <paramref name="logLevel" /> is enabled.
            </summary>
            <param name="logLevel">Level to be checked.</param>
            <returns><c>true</c> if enabled.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Writes a log entry.
            </summary>
            <typeparam name="TState">The type of the object to be written.</typeparam>
            <param name="logLevel">Entry will be written on this level.</param>
            <param name="eventId">Id of the event.</param>
            <param name="state">The entry to be written. Can be also an object.</param>
            <param name="exception">The exception related to this entry.</param>
            <param name="formatter">Function to create a <see cref="T:System.String" /> message of the <paramref name="state" /> and <paramref name="exception" />.</param>
        </member>
        <member name="T:TwinCAT.Ads.Logging.AdsLoggerProvider">
            <summary>
            Logger provider class for ADS logging.
            Implements the <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />
            </summary>
            <remarks>
            Represents a type that creates instances of the <see cref="T:TwinCAT.Ads.Logging.AdsLogger"/> via the <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider"/> interface.
            <example>
            <code language="C#" title="Simple Logging approach with the AdsLoggerProvider" source="..\..\Samples\Sample.Ads.AdsClientCore\Logging.cs" region="CODE_SAMPLE" />
            <code language="C#" title="Enhanced Logging/Configuration approach with HostBuilder" source="..\..\Samples\Sample.Ads.AdsServerCore\Program.cs" region="CODE_SAMPLE" />
            </example>
            </remarks>
            <seealso cref="T:TwinCAT.Ads.Logging.AdsLogger"/>
            <seealso cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/>
            <seealso cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/logging?tabs=command-line">Logging overview</seealso>
            <seealso href="https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration">Configuration overview</seealso>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerProvider.#ctor(System.Func{TwinCAT.Ads.Logging.AdsLoggerConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Logging.AdsLoggerProvider"/> class.
            </summary>
            <param name="getCurrentConfig">The get current configuration.</param>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerProvider.CreateLogger(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance.
            </summary>
            <param name="categoryName">The category name for messages produced by the logger.</param>
            <returns>The instance of <see cref="T:Microsoft.Extensions.Logging.ILogger" /> that was created.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration">
            <summary>
            Class AdsLoggerConfiguration.
            </summary>
            <remarks>
            This configuration class is used in conjunction with the 
            <see cref="T:TwinCAT.Ads.Logging.AdsLoggerProvider"/> and <see cref="T:TwinCAT.Ads.Logging.AdsLogger"/> class to configure the logging.
            </remarks>
            <seealso cref="T:TwinCAT.Ads.Logging.AdsLoggerProvider"/>
            <seealso cref="T:TwinCAT.Ads.Logging.AdsLogger"/>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/> class.
            </summary>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerConfiguration.#ctor(System.Int32,Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/> class.
            </summary>
            <param name="eventId">The event identifier.</param>
            <param name="level">The level.</param>
        </member>
        <member name="P:TwinCAT.Ads.Logging.AdsLoggerConfiguration.LogLevel">
            <summary>
            Gets or sets the <see cref="P:TwinCAT.Ads.Logging.AdsLoggerConfiguration.LogLevel"/> used by the logging  (Default: LogLevel.Information)
            </summary>
            <value>The log level.</value>
        </member>
        <member name="P:TwinCAT.Ads.Logging.AdsLoggerConfiguration.EventId">
            <summary>
            Gets or sets the logging event identifier.
            </summary>
            <value>The event identifier.</value>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerConfiguration.CreateDefault">
            <summary>
            Creates a default <see cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/> with EventId = 0 and <see cref="F:Microsoft.Extensions.Logging.LogLevel.Information"/>.
            </summary>
            <returns>The AdsLoggerConfiguration.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerConfiguration.CreateFromEnvironment">
            <summary>
            Creates a <see cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/> from Environment variables
            </summary>
            <remarks>
            Uses and reads the environment Variable 'Logging__LogLevel__Default'.
            </remarks>
            <returns>AdsLoggerConfiguration.</returns>
        </member>
        <member name="M:TwinCAT.Ads.Logging.AdsLoggerConfiguration.CreateFromConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates the <see cref="T:TwinCAT.Ads.Logging.AdsLoggerConfiguration"/> from configuration interface.
            </summary>
            <remarks>
            Parses the LogLevel from the following configuration object:
            configuration["Logging:LogLevel:Default"]
            </remarks>
            <param name="configuration">The configuration.</param>
            <returns>AdsLoggerConfiguration.</returns>
        </member>
    </members>
</doc>
