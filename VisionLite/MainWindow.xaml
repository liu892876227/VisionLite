<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VisionLite"
        xmlns:ha="clr-namespace:HalconDotNet;assembly=halcondotnet" x:Class="VisionLite.MainWindow"
        mc:Ignorable="d"
        Title="VisionLite" Height="800" Width="1700"
        Closing="Window_Closing"
        WindowStartupLocation="CenterScreen"
        MinHeight="300" MinWidth="500">
    <!--首界面布局，共两行，第一行共两列；第二行共三列；第一行第二列分为两行-->

    <!-- 添加资源字典引用 -->
    <Window.Resources>
        <ResourceDictionary>
            <!-- 先定义本地资源 -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <!-- 再合并外部资源字典 -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CameraIcon.xaml"/>
                <ResourceDictionary Source="ToolbarIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid ShowGridLines="True">
        <Grid.RowDefinitions>
            <!--软件图标、菜单栏和快捷工具条-->
            <RowDefinition Height="50"/>
            <!--模块箱和图像显示区域-->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid ShowGridLines="True" Grid.Row="0" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <!--软件图标-->
                <ColumnDefinition Width="150"/>
                <!--菜单栏和快捷工具条-->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid ShowGridLines="True" Grid.Row="0" Grid.Column="1">
                <Grid.RowDefinitions>
                    <!--菜单栏-->
                    <RowDefinition Height="25"/>
                    <!--快捷工具条-->
                    <RowDefinition Height="25"/>
                </Grid.RowDefinitions>
                <!-- 快捷工具条 -->
                <Border Grid.Row="1" Background="#FF4F4F4F">
                    <StackPanel Orientation="Horizontal">
                        <!-- 相机管理按钮 -->
                        <Button x:Name="CameraManagementButton" 
                                Width="40" 
                                ToolTip="打开相机管理中心"
                                Click="CameraManagementButton_Click"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                            <Button.Content>
                                <ContentPresenter Content="{StaticResource CameraIcon}"/>
                            </Button.Content>
                        </Button>

                        <!-- 分隔符 -->
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                        <!-- 采集控制按钮 -->
                        <Button x:Name="SingleCaptureToolbarButton" Width="40" ToolTip="对活动窗口单次触发" Click="SingleCaptureToolbarButton_Click" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                            <ContentPresenter Content="{StaticResource SingleCaptureIcon}"/>
                        </Button>
                        <Button x:Name="ContinueCaptureToolbarButton" Width="40" ToolTip="对活动窗口连续触发" Click="ContinueCaptureToolbarButton_Click" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                            <ContentPresenter Content="{StaticResource ContinueCaptureIcon}"/>
                        </Button>
                        <Button x:Name="StopCaptureToolbarButton" Width="40" ToolTip="停止活动窗口采集" Click="StopCaptureToolbarButton_Click" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                            <ContentPresenter Content="{StaticResource StopCaptureIcon}"/>
                        </Button>

                        <!-- 分隔符 -->
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                        <!-- 加载图像和ROI工具按钮 -->
                        <Button x:Name="LoadImgButton" 
                                Width="40" 
                                ToolTip="加载本地图像"
                                Click="LoadImgButtonClick"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                            <ContentPresenter Content="{StaticResource LoadImageIcon}"/>
                        </Button>

                        
                        <ComboBox x:Name="RoiComboBox"
                                  Width="40"
                                  ToolTip="选择或创建ROI"
                                  SelectionChanged="RoiComboBox_SelectionChanged"
                                  SelectedIndex="0"
                                  VerticalContentAlignment="Center"
                                  Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}">
                            <ComboBoxItem>
                                <ContentPresenter Content="{StaticResource ROIToolIcon}" Width="20" Height="20" />
                            </ComboBoxItem>
                            <ComboBoxItem Content="ROI工具" IsEnabled="False"/>
                            <ComboBoxItem Content="矩形 (Rectangle)"/>
                            <ComboBoxItem Content="带角度矩形 (Rectangle2)"/>
                            <ComboBoxItem Content="圆形 (Circle)"/>
                            <ComboBoxItem Content="椭圆 (Ellipse)"/>
                            <ComboBoxItem Content="直线 (Line)"/>
                            <ComboBoxItem Content="自由轮廓 (Contour)"/>
                            <ComboBoxItem Content="涂抹式ROI (Paint)"/>
                            <Separator/>
                            <ComboBoxItem Content="清除ROI"/>
                        </ComboBox>

                        <!-- 保存原图和保存ROI的按钮 -->
                        <Button x:Name="SaveOriginalImageButton" 
                                Width="40" 
                                ToolTip="保存活动窗口的原图"
                                Click="SaveOriginalImageButton_Click"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                            <ContentPresenter Content="{StaticResource SaveImageIcon}"/>
                        </Button>

                        <Button x:Name="SaveRoiImageButton" 
                                Width="40" 
                                ToolTip="保存活动窗口的ROI区域图像"
                                Click="SaveRoiImageButton_Click"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                IsEnabled="False">
                            <ContentPresenter Content="{StaticResource SaveRoiImageIcon}"/>
                        </Button>
                        


                    </StackPanel>
                </Border>
            </Grid>
        </Grid>

        <Grid ShowGridLines="True" Grid.Row="1" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <!--模块箱-->
                <ColumnDefinition Width="80"/>
                <!--图像显示区域和结果显示区域-->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid ShowGridLines="True" Grid.Row="0" Grid.Column="1">
                <Grid.RowDefinitions>
                    <!--图像显示区域-->
                    <RowDefinition Height="*"/>

                    <!--状态栏-->
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <Grid ShowGridLines="True" Grid.Row="0" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <!--图像显示区域的菜单栏-->
                        <RowDefinition Height="25"/>
                        <!--图像显示区域的图像缩放控制栏-->
                        <RowDefinition Height="25"/>
                        <!--图像显示区域的图像显示区域-->
                        <RowDefinition Height="*"/>

                    </Grid.RowDefinitions>

                    <!--实现固定四个图像显示窗口-->
                    <Grid ShowGridLines="True" Grid.Row="2" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="5*"/>
                        </Grid.RowDefinitions>

                        <Grid ShowGridLines="True" Grid.Row="0" Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="5*"/>
                            </Grid.ColumnDefinitions>

                            <!-- 用Border包裹HSmartWindowControlWPF -->
                            <Border x:Name="Border1" Grid.Column="0" BorderBrush="Gray" BorderThickness="1" Margin="1">
                                <ha:HSmartWindowControlWPF x:Name="HSmart1" HKeepAspectRatio="True"/>
                            </Border>

                            <Border x:Name="Border2" Grid.Column="1" BorderBrush="Gray" BorderThickness="1" Margin="1">
                                <ha:HSmartWindowControlWPF x:Name="HSmart2" HKeepAspectRatio="True"/>
                            </Border>
                        </Grid>

                        <Grid ShowGridLines="True" Grid.Row="1" Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="5*"/>
                            </Grid.ColumnDefinitions>

                            <!-- 用Border包裹HSmartWindowControlWPF -->
                            <Border x:Name="Border3" Grid.Column="0" BorderBrush="Gray" BorderThickness="1" Margin="1">
                                <ha:HSmartWindowControlWPF x:Name="HSmart3" HKeepAspectRatio="True"/>
                            </Border>

                            <Border x:Name="Border4" Grid.Column="1" BorderBrush="Gray" BorderThickness="1" Margin="1">
                                <ha:HSmartWindowControlWPF x:Name="HSmart4" HKeepAspectRatio="True"/>
                            </Border>
                        </Grid>
                    </Grid>
                </Grid>
                
                <!-- 状态栏 -->
                <StatusBar Grid.Row="1">
                    <StatusBarItem>
                        <TextBlock x:Name="StatusTextBlock" Text="准备就绪"/>
                    </StatusBarItem>

                    <!-- 在状态栏右侧添加ROI参数显示区域 -->
                    <StatusBarItem HorizontalAlignment="Right">
                        <Border>
                            <StackPanel x:Name="RoiParameterPanel" 
                                        Orientation="Horizontal" 
                                        Visibility="Collapsed"/>
                            <!-- 你可以移除 StackPanel 里的 VerticalAlignment="Center"，也可以保留，现在它不再重要 -->
                        </Border>
                    </StatusBarItem>
                </StatusBar>
            </Grid>
        </Grid>

    </Grid>
</Window>
